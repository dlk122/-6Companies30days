1.https://leetcode.com/problems/course-schedule/

cycle detection problem of directed graph 
 public boolean detect(ArrayList<ArrayList<Integer>> ans , boolean[] vis , int m , boolean[] dfsvis){
        for(int i = 0 ; i<m ; i++){
            if(vis[i] == false){
            if(detectcycle(ans , vis , i , dfsvis)) return true;
            }
        }
        return false;
    }

    public boolean detectcycle(ArrayList<ArrayList<Integer>> ans , boolean[] vis , int i , boolean[] dfsvis){
      vis[i] = true;
      dfsvis[i] = true;

      for(Integer n  : ans.get(i)){
          if(vis[n] == false){
              if(detectcycle(ans , vis , n , dfsvis)) return true;
          }
          else if(dfsvis[n] == true) return true;
      }

      dfsvis[i] = false;
        return false;
    }
    
    2.
